server {
	listen 80;
	listen 443 ssl;
	server_name dev-core.local localhost;

	# SSL Configuration
	ssl_certificate /etc/nginx/ssl/dev-core.local.crt;
	ssl_certificate_key /etc/nginx/ssl/dev-core.local.key;

	# Redirect HTTP to HTTPS
	if ($scheme = http) {
			return 301 https://$server_name$request_uri;
	}

	# Serve static files
	root /usr/share/nginx/html;
	index index.html;

	location / {
			try_files $uri $uri/ /index.html;
	}

	# CORS Headers for API
	location /api/ {
			proxy_pass http://host.docker.internal:5000;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;

			# Add CORS headers
			add_header 'Access-Control-Allow-Origin' 'https://dev-core.local, https://localhost';
			add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
			add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Range';
			add_header 'Access-Control-Expose-Headers' 'Content-Length, Content-Range';
			if ($request_method = 'OPTIONS') {
					return 204;
			}
	}

	# CORS Headers for Uploads
	location /Uploads/ {
			proxy_pass http://host.docker.internal:5000;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;

			# Add CORS headers
			add_header 'Access-Control-Allow-Origin' 'https://dev-core.local, https://localhost';
			add_header 'Access-Control-Allow-Methods' 'GET, HEAD, OPTIONS';
			add_header 'Access-Control-Allow-Headers' 'Authorization, Range';
			add_header 'Access-Control-Expose-Headers' 'Content-Length, Content-Range';
			if ($request_method = 'OPTIONS') {
					return 204;
			}
	}

	# Serve static assets
	location ~* \.(?:ico|css|js|gif|jpe?g|png|woff2?|eot|ttf|svg|mp4|webm|ogg|pdf)$ {
			expires max;
			access_log off;
			add_header Cache-Control "public";
	}

	}
